/*
 * Copyright (c) 2014 Jacob D. Parr
 *
 * This software may not be used without permission.
 */
project(":tioga-push-server-grizzly") {
  version = tiogaAppVersion

  dependencies {
    compile project(":tioga-push-engine")

    compile("org.springframework:spring-aop:4.1.6.RELEASE") {force = true}
    compile("org.springframework:spring-core:4.1.6.RELEASE") {force = true}
    compile("org.springframework:spring-beans:4.1.6.RELEASE") {force = true}
    compile("org.springframework:spring-context:4.1.6.RELEASE") {force = true}
    compile("org.tiogasolutions.runners:tioga-runners-spring-grizzly:+")

    // required by Jersey-Spring's stupid attempt to check for a ServletContext
	  runtime("javax.servlet:javax.servlet-api:3.1.0")

    testCompile("org.testng:testng:6.8.21")
  }

  configurations.all({
    resolutionStrategy({
      force(
        "org.slf4j:slf4j-api:1.7.12",
        "org.javassist:javassist:3.18.1-GA",
        "commons-logging:commons-logging:1.2",
        "org.apache.httpcomponents:httpclient:4.3.4",
        "org.apache.httpcomponents:httpcore:4.3.2",
        "com.fasterxml.jackson.core:jackson-databind:2.5.1",
      )
    })
  })

  File serverStartFile = file("$buildDir/scripts/server-start.bat");

  task createStartScript << {
    serverStartFile.parentFile.mkdirs()
    FileWriter writer = new FileWriter(serverStartFile);
    writer.write("@echo off\r\ncls\r\n");
    writer.write("echo Starting application\r\n");
    writer.write("%JAVA_HOME%\\bin\\javaw.exe -Dpush.server.context.root=\"/push-server\" -jar ./lib/${project.name}-${project.version}.jar");
    writer.close()
  }

  apply plugin:'distribution'

  artifacts {
    archives distZip
  }

  distributions {
    main {
      contents {
        into("lib") {
          from(jar)
          from(project.configurations.runtime)
        }
        from(serverStartFile, createStartScript)
      }
    }
  }

  jar {
    manifest {
      attributes(
        "Implementation-Version" : project.version,
        "Main-Class"             : "org.tiogasolutions.push.server.grizzly.GrizzlyPushServer",
        "Class-Path"             : configurations.compile.collect { it.getName() }.join(' ')
      )
    }
  }

  apply(from: urlCache.get("https://raw.githubusercontent.com/tioga/build-scripts/master/build-config-deployer.gradle"))
}
